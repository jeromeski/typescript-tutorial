------------
 INPUTFIELD
------------
Import React library and useRef hook
Import CSS file
Define interface for props
Define a function component named InputField that accepts props
  Create a reference to a DOM input element
  Return a form element
      Add a class name to the form element
      Add an event listener for form submission
      Call the handleAdd function passed in props when the form is submitted
           Check if the inputRef has been initialized before accessing its properties
            Remove focus from the input element

        Set the input type to text
        Set a placeholder text for the input
        Set the value of the input to the value of the todo state passed in props
        Assign the inputRef to the input element
        Add an event listener for input changes
        Add a class name to the input element

        Set the button type to submit
        dd a class name to the button element
Export the InputField component as default
  
------------
  TODOLIST
------------

------------
  APP
------------
- Import necessary modules and components:
  - React and useState from "react"
  - CSS file "./App.css"
  - InputField component from "./components/InputField"
  - TodoList component from "./components/TodoList"
  - DragDropContext and DropResult from "react-beautiful-dnd"
  - Todo model from "./models/models"

- Define the main component named App as a functional component:
  - Initialize state variables:
    - todo: string
    - todos: array of Todo objects
    - CompletedTodos: array of Todo objects

  - Define a function handleAdd to handle addition of todos:
    - Prevent default form submission behavior
    - Check if todo is not empty
      - If not empty, add a new todo to the todos array with current timestamp as id, todo text, and isDone set to false
      - Reset the todo input field to empty

  - Define a function onDragEnd to handle drag and drop functionality:
    - Extract destination and source from the DropResult
    - Log the result
    - If there is no destination, exit the function
    - If destination and source are the same, exit the function
    - Initialize variables add, active (reference to todos), and complete (reference to CompletedTodos)
    - Source Logic:
      - If source droppableId is "TodosList", remove todo from active at the source index
      - Otherwise, remove todo from complete at the source index
    - Destination Logic:
      - If destination droppableId is "TodosList", insert todo to active at destination index
      - Otherwise, insert todo to complete at destination index
    - Update state variables CompletedTodos and todos with the modified complete and active arrays

  - Render JSX elements:
    - DragDropContext with onDragEnd handler
      - div with className "App":
        - span with className "heading" containing text "Taskify"
        - InputField component passing todo state, setTodo function, and handleAdd function as props
        - TodoList component passing todos, setTodos, CompletedTodos, and setCompletedTodos as props

- Export the App component as the default export

/*%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Define styles for elements with class "input":
  Set display to flex
  Set width to 95%
  Set position to relative
  Align items along the center

Define styles for elements with class "input__box":
  Set width to 100%
  Set border-radius to 50px
  Set padding to 20px top and bottom, 30px left and right
  Set font size to 25px
  Remove border
  Set transition to 0.2s
  Apply inset box shadow of 5px with black color

Define styles for elements with class "input__box" when focused:
  Set box shadow to 0 0 10px with a spread radius of 1000px and black color
  Remove outline

Define styles for elements with class "input_submit":
  Set position to absolute
  Set width and height to 50px
  Set margin to 12px
  Set border-radius to 50px
  Align to the right
  Remove border
  Set font size to 15px
  Set background color to #2f74c0
  Set text color to white
  Set transition to 0.2s for all properties
  Apply box shadow of 10px with black color

Define styles for elements with class "input_submit" on hover:
  Set background color to #388ae2

Define styles for elements with class "input_submit" when active:
  Set scale to 0.8
  Apply box shadow of 5px with black color

Define styles for elements with class "container":
  Set width to 95%
  Set display to flex
  Set margin top to 10px
  Justify content to space between
  Align items along flex-start

Define styles for elements with class "todos":
  Set border radius to 5px
  Set display to flex
  Arrange flex items in column
  Set width to 47.5%
  Set padding to 15px
  Set background color to rgb(50, 195, 205)

Define styles for elements with class "dragactive":
  Set background color to rgb(0, 221, 236)

Define styles for elements with class "dragcomplete":
  Set background color to rgb(255, 38, 0)

Define styles for elements with class "remove":
  Set background color to rgb(235, 103, 80)

Define styles for elements with class "todos__heading":
  Set font size to 30px
  Set text color to white

Define styles for elements with class "todos__single":
  Set display to flex
  Set border radius to 5px
  Set padding to 20px
  Set margin top to 15px
  Set background image to specified URL
  Set transition to 0.2s

Define styles for elements with class "drag":
  Apply box shadow of 20px with black color

Define styles for elements with class "todos__single" on hover:
  Apply box shadow of 5px with black color
  Set scale to 1.03

Define styles for elements with class "todos__single--text":
  Set flex to 1
  Set padding to 5px
  Remove border
  Set font size to 20px

Define styles for elements with class "todos__single--text" when focused:
  Remove outline

Define styles for elements with class "icon":
  Set margin left to 10px
  Set font size to 25px
  Set cursor to pointer
  
Define media query for screens with maximum width of 1100px:
  Adjust styles for elements with class "todos":
    Set width to 45%
Define media query for screens with maximum width of 700px:
  Adjust styles for elements with class "input":
    Set width to 95%
  Adjust styles for elements with class "container":
    Set width to 95%
    Set flex direction to column
  Adjust styles for elements with class "todos":
    Set width to 95%
    Set margin bottom to 10px
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%*/

/*%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Import Google Fonts Neucha

Define styles for elements with class "App"
  Set width to 100% of viewport width
  Set minimum height to 100% of viewport height
  Display elements as a flex container
  Arrange flex items in a column
  Align flex items along the center of the cross axis
  Set background color to a shade of blue
  Set font family to "Neucha" and fallback to cursive

Define styles for elements with class "heading"
  Transform text to uppercase
  Set font size to 40 pixels
  Set margin above and below to 30 pixels, left and right to 0
  Set text color to white
  Set z-index to 1 (for positioning)
  Align text to the center

Media query for screens with maximum width of 800px
  Adjust styles for elements with class "heading" within the media query
  Reduce top and bottom margin to 15 pixels
  Reduce font size to 35 pixels
  
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%*/ 